{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alertbar.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alertbar","word","alert","charAt","slice","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","where","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9f88ee25.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li> */}\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'?'Enable Dark Mode':'Enable Light Mode'}</label>\r\n</div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    where: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Title is known'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\nconst upClick = () => {\r\n    //alert(\"Convert to upper case event.\");\r\n    //setText(\"You have clicked on uppercase conversion button\");\r\n    setText(text.toUpperCase());\r\n    if(text!==''){\r\n        props.showAlert(\"Converted to upper case\",\"success\");\r\n    }\r\n    else{\r\n        props.showAlert(\"Enter text !!!\",\"warning\");\r\n    }\r\n}\r\nconst upChange = (event) => {\r\n    //alert(\"Triggered on change of text.\");\r\n    const a = event.target.value;\r\n    setText(a);\r\n}\r\nconst lowClick = () => {\r\n    //alert(\"Convert to upper case event.\");\r\n    //setText(\"You have clicked on lowercase conversion button\");\r\n    setText(text.toLowerCase());\r\n    if(text!==''){props.showAlert(\"Converted to lower case\",\"success\");}\r\n    else{props.showAlert(\"Enter text !!!\",\"warning\")}\r\n}\r\n\r\nconst textCopy = () => {\r\n    var text = document.getElementById('myBox');\r\n    if(text.value!==''){\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard.\",\"success\");\r\n    }\r\n    else{\r\n        props.showAlert(\"Enter text to be copied.\",\"warning\");\r\n    }\r\n}\r\n\r\nconst clearText = () => {\r\n    if(text!==''){setText('');props.showAlert(\"Text cleared.\",\"success\");}\r\n    else{props.showAlert(\"No text present.\",\"warning\");}\r\n}\r\n  const [text, setText] = useState('');\r\n  //text = \"New\";\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={upChange} id=\"myBox\" rows=\"8\"></textarea>\r\n        <button className=\"btn btn-primary my-3\" onClick={upClick}>Upper Case conversion</button>\r\n        <button className=\"btn btn-primary mx-4\" onClick={lowClick}>Lower Case conversion</button>\r\n        <button className=\"btn btn-success\" onClick={clearText}>Clear</button>\r\n        <button className=\"btn btn-primary mx-4\" onClick={textCopy}>Copy to clipboard</button>\r\n    </div>\r\n    </div>\r\n    <div className=\"container my-4\">\r\n    <h3>Your text summary</h3>\r\n    <p>{text.split(\" \").length} words and {text.length} characters are present in this text.</p> \r\n    <p>Time to read {0.008 * text.split(\" \").length}</p> \r\n    <p>Preview</p>\r\n    <p>{text}</p> \r\n    </div>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function Alertbar(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.charAt(0).toUpperCase();\r\n        return lower+word.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport {useState} from 'react';\nimport Alertbar from './components/Alertbar';\nimport React from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const toggleMode = () => {\n    if(mode === \"light\"){\n      setMode('dark');\n      showAlert('Dark mode activated.','success');\n      document.title = 'Text Utils - Dark Mode';\n    }\n    else{\n      setMode('light');\n      showAlert('Light mode activated.','success');\n      document.title = 'Text Utils - Light Mode';\n    }\n  }\n  const showAlert = (message,type) => {\n      setAlert({\n        msg : message,\n        type : type\n      });\n  }\n\n  return (\n    // <Router>\n    <>\n    <Navbar title=\"TextUtils\" where=\"Home\" mode={mode} toggleMode={toggleMode}/>\n    <Alertbar alert={alert}/>\n    <Textform heading=\"Enter text\" showAlert={showAlert} mode={mode}/>\n    </>\n    // <Switch>\n    //       <Route exact path=\"/about\">\n    //         <About/>\n    //       </Route>\n    //       <Route exact path=\"/\">\n\n    //       </Route>\n    // </Switch>\n    // </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}